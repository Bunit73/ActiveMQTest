name: Linting and Testing

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Read versions from versions.json
  read-versions:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.set-versions.outputs.node-version }}
      python-version: ${{ steps.set-versions.outputs.python-version }}
    steps:
      - uses: actions/checkout@v3
      - id: set-versions
        run: |
          echo "node-version=$(jq -r .nodeVersion versions.json)" >> $GITHUB_OUTPUT
          echo "python-version=$(jq -r .pythonVersion versions.json)" >> $GITHUB_OUTPUT
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    needs: read-versions
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.read-versions.outputs.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint:js

  pylint:
    name: Pylint
    runs-on: ubuntu-latest
    needs: read-versions
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.read-versions.outputs.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Pylint
        run: python -m pylint *.py

  jest:
    name: Jest Tests
    runs-on: ubuntu-latest
    needs: read-versions
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.read-versions.outputs.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Jest tests
        run: npm test

  pytest:
    name: Pytest Tests
    runs-on: ubuntu-latest
    needs: read-versions
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.read-versions.outputs.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Pytest tests
        run: python -m pytest
